#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#


#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  #这里DEFAULT命名需要跟链上保持一致
  organization: Org1MSP

  logging:
    level: info #debug #info

  eventService:

    # blockHeightLagThreshold sets the block height lag threshold. This value is used for choosing a peer
    # to connect to. If a peer is lagging behind the most up-to-date peer by more than the given number of
    # blocks then it will be excluded from selection.
    # If set to 0 then only the most up-to-date peers are considered.
    # If set to -1 then all peers (regardless of block height) are considered for selection.
    # Default: 5
    blockHeightLagThreshold: 2

    # reconnectBlockHeightLagThreshold - if >0 then the event client will disconnect from the peer if the peer's
    # block height falls behind the specified number of blocks and will reconnect to a better performing peer.
    # If set to 0 then this feature is disabled.
    # Default: 0 (disabled)
    # NOTES:
    #   - This feature should only be enabled when using deliver events, otherwise events may be lost during reconnect
    #   - Setting this value too low may cause the event client to disconnect/reconnect too frequently, thereby
    #     affecting performance.
    reconnectBlockHeightLagThreshold: 2

    # blockHeightMonitorPeriod is the period in which the connected peer's block height is monitored. Note that this
    # value is only relevant if reconnectBlockHeightLagThreshold >0.
    # Default: 5s
    blockHeightMonitorPeriod: 3s

    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    # the values as they see fit in their config file

  # Global configuration for peer, event service and orderer timeouts
  # if this this section is omitted, then default values will be used (same values as below)
#  peer:
#    timeout:
#      connection: 10s
#      response: 180s
#      discovery:
#        # Expiry period for discovery service greylist filter
#        # The channel client will greylist peers that are found to be offline
#        # to prevent re-selecting them in subsequent retries.
#        # This interval will define how long a peer is greylisted
#        greylistExpiry: 10s
   # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256
#
# list of participating organizations in this network
#
organizations:
  #这里DEFAULT命名需要跟链上保持一致
  Org1MSP:
    mspid: Org1MSP
    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    # if running in linux, you should change the char "\" to "/"
    # 参考fabric-sdk-go\pkg\core\config\testdata\config_test_embedded_pems.yaml
    # 无此配置时，会有后面的提示，但并不影响：msp.NewIdentityManager -> WARN Cryptopath not provided for organization [default], MSP stores not created
    cryptoPath:  imc/msp 
    users:
      #下面需要跟代码中的fabsdk.WithUser("testuser")处保持一致
      testuser: 
        key:
          #path: hyperledger\fabric\msp\keystore\b49efcb9a021b7f8194968fec3fb393ab200a1e90835dbbce4c6a2d97cbc786e_sk
          path: imc/msp/keystore/app.key
        cert:
          #path: hyperledger\fabric\msp\signcerts\cert.pem
          path: imc/msp/signcerts/app.cert
    peers:
      #下面命名需要跟peers配置下面的保持一致
      - testimcpeer

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  _default:
    #common grpc options between all the peers
    grpcOptions:
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      # 我们的测试并没有使用TLS，所以这里必须设置为true，否则会自动连接grpcs，就会失败
      allow-insecure: false

  #下面的命名会成为其他地方指定peer的标准命名
  testimcpeer:
    url: peer0.org1.example.com:7051
    # if running in linux, you should change the char "\" to "/"
    tlsCACerts:
    #   path: hyperledger\msp\tlscacerts\tlsroot.pem
      path: imc/msp/cacerts/peer-tls-ca.cert


#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # Mychannel overrides initialBackoff for discovery
  # 下面命名需要跟链上保持一致
  mychannel: 
    policies:
      discovery:
        retryOpts:
          #[Required for override] number of retry attempts
          attempts: 4
          initialBackoff: 1s
    peers:
      #下面命名需要跟peers配置下面的保持一致
      testimcpeer: 
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

        #
  # mychannel:
  #   orderers:
  #     - orderer.example.com
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  _default:
    url: orderer0.orderer.example.com:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      #ssl-target-name-override: orderer.example.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      #keep-alive-time: 0s
      #keep-alive-timeout: 20s
      #keep-alive-permit: false
      #fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      # 我们的测试并没有使用TLS，所以这里必须设置为true，否则会自动连接grpcs，就会失败
      allow-insecure: false

    tlsCACerts:
    #   # Certificate location absolute path
    #   path: ${GOPATH}/src/github.com/hyperledger/fabric-sdk-go/${CRYPTOCONFIG_FIXTURES_PATH}/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem
       path: imc/msp/cacerts/orderer-tls-ca.cert

# EntityMatchers enable substitution of network hostnames with static configurations
 # so that properties can be mapped. Regex can be used for this purpose
# UrlSubstitutionExp can be empty which means the same network hostname will be used
# UrlSubstitutionExp can be given same as mapped peer url, so that mapped peer url can be used
# UrlSubstitutionExp can have golang regex matchers like $1.example.$2:$3 for pattern
 # like peer0.org1.example.com:1234 which converts peer0.org1.example.com to peer0.org1.example.com:1234
# sslTargetOverrideUrlSubstitutionExp follow in the same lines as
 # SubstitutionExp for the fields gprcOptions.ssl-target-name-override respectively
# In any case mappedHost's config will be used, so mapped host cannot be empty, if entityMatchers are used
# 参考github.com\hyperledger\fabric-sdk-go\pkg\core\config\testdata\config_test_entity_matchers.yaml
entityMatchers:
  # 这里需要对orderer进行host映射，因为gosdk发送tx后，会从peer执行ChincodeID为csss的QUERY，名为GetConfigBlock
  # 会得到一个orderer地址，但这个地址可能不是有效的域名，就需要用到这里的映射
  # pattern用正则表达式进行匹配
  # urlSubstitutionExp 这里写真实的orderer地址
  orderer:
   - pattern: orderer #(\w+).example.(\w+)
     urlSubstitutionExp: orderer0.orderer.example.com:7050
     #grpc://localhost:7050
     #  sslTargetOverrideUrlSubstitutionExp: orderer.example.com
     # mappedHost: orderer